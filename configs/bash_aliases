#!/bin/bash

###########################################################################
# ask for confirmation before deleting/overwriting
###########################################################################

alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

###########################################################################
# enable color support of ls and also add handy aliases
###########################################################################

if \ls -d --color -Chv / 1>/dev/null 2>&1; then

    # GNU ls

    export LS_COLORS="$(printf "%s:" \
        'rs=0'          'di=01;34'      'ln=01;36'     \
        'mh=00'         'pi=40;33'      'so=01;35'     \
        'do=01;35'      'bd=40;33;01'   'cd=40;33;01'  \
        'or=40;31;01'   'su=37;41'      'sg=30;43'     \
        'ca=30;41'      'tw=30;42'      'ow=30;42'     \
        'st=37;44'      'ex=01;32'      '*.tar=01;31'  \
        '*.tgz=01;31'   '*.arj=01;31'   '*.taz=01;31'  \
        '*.lzh=01;31'   '*.lzma=01;31'  '*.tlz=01;31'  \
        '*.txz=01;31'   '*.zip=01;31'   '*.z=01;31'    \
        '*.Z=01;31'     '*.dz=01;31'    '*.gz=01;31'   \
        '*.lz=01;31'    '*.xz=01;31'    '*.bz2=01;31'  \
        '*.bz=01;31'    '*.tbz=01;31'   '*.tbz2=01;31' \
        '*.tz=01;31'    '*.deb=01;31'   '*.rpm=01;31'  \
        '*.jar=01;31'   '*.war=01;31'   '*.ear=01;31'  \
        '*.sar=01;31'   '*.rar=01;31'   '*.ace=01;31'  \
        '*.zoo=01;31'   '*.cpio=01;31'  '*.7z=01;31'   \
        '*.rz=01;31'    '*.jpg=01;35'   '*.jpeg=01;35' \
        '*.gif=01;35'   '*.bmp=01;35'   '*.pbm=01;35'  \
        '*.pgm=01;35'   '*.ppm=01;35'   '*.tga=01;35'  \
        '*.xbm=01;35'   '*.xpm=01;35'   '*.tif=01;35'  \
        '*.tiff=01;35'  '*.png=01;35'   '*.svg=01;35'  \
        '*.svgz=01;35'  '*.mng=01;35'   '*.pcx=01;35'  \
        '*.mov=01;35'   '*.mpg=01;35'   '*.mpeg=01;35' \
        '*.m2v=01;35'   '*.mkv=01;35'   '*.webm=01;35' \
        '*.ogm=01;35'   '*.mp4=01;35'   '*.m4v=01;35'  \
        '*.mp4v=01;35'  '*.vob=01;35'   '*.qt=01;35'   \
        '*.nuv=01;35'   '*.wmv=01;35'   '*.asf=01;35'  \
        '*.rm=01;35'    '*.rmvb=01;35'  '*.flc=01;35'  \
        '*.avi=01;35'   '*.fli=01;35'   '*.flv=01;35'  \
        '*.gl=01;35'    '*.dl=01;35'    '*.xcf=01;35'  \
        '*.xwd=01;35'   '*.yuv=01;35'   '*.cgm=01;35'  \
        '*.emf=01;35'   '*.axv=01;35'   '*.anx=01;35'  \
        '*.ogv=01;35'   '*.ogx=01;35'   '*.aac=00;36'  \
        '*.au=00;36'    '*.flac=00;36'  '*.mid=00;36'  \
        '*.midi=00;36'  '*.mka=00;36'   '*.mp3=00;36'  \
        '*.mpc=00;36'   '*.ogg=00;36'   '*.ra=00;36'   \
        '*.wav=00;36'   '*.axa=00;36'   '*.oga=00;36'  \
        '*.spx=00;36'   '*.xspf=00;36'  )"

    ls_cmd='ls --color=auto --quoting-style=literal -Chv'

elif \ls -d -GCh / 1>/dev/null 2>&1; then

    # BSD ls

    export CLICOLOR=1
    export LSCOLORS=exgxfxdxcxegedabagacad
    ls_cmd='ls -GCh'

else

    # Weird ls

    ls_cmd='ls'

fi

function _ls_hidden_inner()
{
    local opts=$1
    shift

    if [ "$1" ]; then
        cd "$1"
    fi

    declare f p
    declare -a hidden_pats dir_files not_hidden_files
    #readarray -t hidden_pats < .hidden
    hidden_pats=("Icon?")
    if [ -r .hidden ]; then
        OIFS=$IFS
        IFS=$'\r\n' hidden_pats+=($(cat .hidden))
        IFS=$OIFS
    fi
    shopt -s nullglob
    dir_files=(*)
    shopt -u nullglob
    not_hidden_files=()

    for f in "${dir_files[@]}"; do
        for p in "${hidden_pats[@]}"; do
            [[ $f == $p ]] && continue 2
        done
        not_hidden_files+=("$f")
    done

    if [ ${#not_hidden_files[@]} -eq 0 ]; then
        $ls_cmd $opts
        return $?
    else
        $ls_cmd $opts -d -- "${not_hidden_files[@]}"
        return $?
    fi
}

function _ls_hidden()
{
    local opts=$1
    shift

    if [ $# -gt 1 -o \( $# -eq 1 -a ! -d "$1" \) ]; then
        $ls_cmd $opts "$@"
        return $?
    fi

    local dir_name=$1
    if [ -z "$dir_name" ]; then
        dir_name=$PWD
    fi

    if [ "$(basename "$dir_name")" = "Downloads" ]; then
        opts="$opts -Artc"
    fi

    # execute in subshell
    (
        _ls_hidden_inner "$opts" "$@"
        exit $?
    )
    return $?
}

alias ls="$ls_cmd"
alias l="_ls_hidden ''"
alias la="$ls_cmd -A"
alias ll="_ls_hidden -l"

###########################################################################
# vi/vim
###########################################################################

if [ -x "$(command -v vim)" ]; then

    alias vi=vim

else

    unalias vi 2>/dev/null

fi

###########################################################################
# sudo and vim
###########################################################################

function sudo() {
    if [ "X$1" = "Xvi" -o "X$1" = "Xview" ]; then
        if [ "X$1" = "Xvi" ]; then
            local vim_cmd=$(which vim)
        else
            local vim_cmd=$(which "$1")
        fi
        if [ ! -x "$vim_cmd" ]; then
            vim_cmd="$1"
        fi
        shift
        command sudo -E INSUDOEDIT=yes HOME="$HOME" "$vim_cmd" -Z "$@"
    else
        command sudo "$@"
    fi
}

###########################################################################
# texdoc
###########################################################################


if [ -x "$(command -v texdoc)" ]; then

    alias texdoc='texdoc -l'

else

    unalias texdoc 2>/dev/null

fi


###########################################################################
# top
###########################################################################

if [ -x "$(command -v htop)" ]; then

    alias top="htop"

elif [ "$(uname)" = "Darwin" ]; then

    alias top="top -u"

else

    unalias top 2>/dev/null

fi

###########################################################################
# man
###########################################################################

if [ -f "$HOME/.vim/bundle/vimpager/vimpager" ]; then

    function _man_vimpager() {(
        if [ -z "$*" ]; then
            \man
            return
        fi
        export MANPATH="$CONDA_PREFIX/share/man:"
        IFS=$'\n' read -rd '' -a MANFILES <<<"$(\man -w "$@")"
        for MANFILE in "${MANFILES[@]}"; do
            env \
                PAGER="$HOME/.vim/bundle/vimpager/vimpager" \
                man "$MANFILE"
        done
    )}

    alias man=_man_vimpager

else

    unalias man 2>/dev/null

fi

###########################################################################
# which
###########################################################################

alias which='alias | \which --tty-only --read-alias --show-dot --show-tilde'

###########################################################################
# print path in a sane way
###########################################################################

function path() {(
    if [ -z "$1" ]; then
        P=$PATH
    else
        P=$1
    fi
    IFS=:
    printf "%s\n" $P
)}

########################################################################
# ipython in mac 
########################################################################

if [ -e "$HOME/.bin_mac" ]; then

    alias ipython='\ipython --TerminalInteractiveShell.true_color=True'

else

    unalias ipython 2>/dev/null

fi

########################################################################
# conda activation/deactivation
########################################################################

function _custom_conda_activate() {
    if [ "$1" ]; then
        conda activate env-"$1"
    elif [ -f "environment.yml" ]; then
        conda activate $(sed -E -n -e '1s/name: (.*)/\1/p' environment.yml)
    else
        echo "What Conda environment do you want to activate?"
    fi
}

alias activate='_custom_conda_activate'
alias deactivate='conda deactivate'

########################################################################
# 
########################################################################

# vi: ft=bash
