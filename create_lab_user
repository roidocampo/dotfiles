#!/bin/bash

########################################################################
# box drawing
########################################################################

box_start() {
    TITLE=$1 
    if [ -n "$2" ]; then
        BOX_COLOR=$2
    else
        BOX_COLOR=34
    fi
    if [ -z "$NOT_FIRST_BOX" ]; then
        printf '\n'
        NOT_FIRST_BOX=true
    fi
    printf '  \033[00;%sm┌─── %s ' "$BOX_COLOR" "$TITLE"
    i=0
    padlen=$(( 74 - ${#TITLE} ))
    while [ "$i" -lt "$padlen" ]; do
        printf '─'
        i=$(( i+1 ))
    done
    printf '┐\033[00m\n'
    printf '  \033[00;%sm│%-79.79s│\033[00m\n' "$BOX_COLOR" ''
}

box_row() {
    CWIDTH1=$1
    COLOR=$2
    COL1=$3
    COL2=$4
    CWIDTH2=$(( 75 - CWIDTH1 ))
    printf '  \033[00;%sm│\033[00m  ' "$BOX_COLOR"
    printf '\033[00;%sm' "$COLOR"
    printf '%-*.*s' "$CWIDTH1" "$CWIDTH1" "$COL1"
    printf '\033[00m '
    printf '%-*.*s' "$CWIDTH2" "$CWIDTH2" "$COL2"
    printf ' \033[00;%sm│\033[00m\n' "$BOX_COLOR"
}

box_end() {
    printf '  \033[00;%sm│%-79.79s│\033[00m\n' "$BOX_COLOR" ''
    printf '  \033[00;%sm└' "$BOX_COLOR"
    i=0
    while [ "$i" -lt 79 ]; do
        printf '─'
        i=$(( i+1 ))
    done
    printf '┘\033[00m\n\n'
}

########################################################################
# main
########################################################################

main() {
    if [ "$#" != "1" ] ; then
        ERROR="1"
        USERNAME="okname"
    else
        USERNAME="$1"

        if ! [[ "$USERNAME" =~ ^[a-z][a-z0-9]+$ ]] ; then
            ERROR="2"
        elif id "$USERNAME" &>/dev/null; then
            ERROR="3"
        fi
    fi

    if [ "$ERROR" ] ; then
        box_start ERROR 31 >&2
        box_row 1 33 "*" "Usage: $0 NEW_USERNAME" >&2
        if [ "$ERROR" = "2" ] ; then
            box_row 1 33 "*" "Invalid NEW_USERNAME: $USERNAME" >&2
        elif [ "$ERROR" = "3" ] ; then
            box_row 1 33 "*" "User already exists: $USERNAME" >&2
        fi
        box_end >&2
        exit 1
    fi

    box_start "LAB USER CREATION"
    box_row 1 33 "*" "This will create a new user."
    box_row 1 33 "*" "Username: $USERNAME"
    box_row 1 33 "*" "Home:     /home/$USERNAME"
    box_row 1 33 "*" "URL:      https://$USERNAME.lab.rjtd.eu"
    box_end

    read -t 10 -n 1 -p "Proceed (y/N)? " ANSWER

    if [ "$ANSWER" ]; then
        echo
    fi

    if [ "$ANSWER" != 'y' ]; then
        echo "Exiting (did nothing)."
        exit
    fi

    echo "Acquiring sudo privileges."
    sudo -k
    sudo echo Sudo privileges acquired.

    if [ "$?" != "0" ] ; then
        echo "Could not acquire sudo privileges."
        echo "Exiting (did nothing)."
        exit
    fi

    echo "Enter password for new user $USERNAME."
    read -s -p "New password for $USERNAME: " PASSWORD
    echo
    read -s -p "Retype password for $USERNAME: " PASSWORD_CONFIRM
    echo

    if [ "$PASSWORD" != "$PASSWORD_CONFIRM" ]; then
        echo "Passwords do not match."
        echo "Exiting (did nothing)."
        exit
    fi

    #PASSWORD_ENCRYPTED=$(openssl passwd -crypt "$PASSWORD")

    D=.dotfiles

    OUT_TAR_FILE="$HOME/${USERNAME}_dotfiles_$(date +%F_%H-%M-%S_%3N).tgz"
    OUT_TAR_FILE2="/home/$USERNAME/${USERNAME}_dotfiles_$(date +%F_%H-%M-%S_%3N).tgz"

    IN_FILES=( $D/setup $D/configs $D/services )

    EXCLUDES=( 
        --exclude=$D'/configs/*[_@]mac'
        --exclude=$D'/configs/vim/bundle'
        --exclude=$D'/configs/vim/swap'
        --exclude=$D'/configs/vim/vimundo'
        --exclude=$D'/configs/vim/.netrwhist'
        --exclude=$D'/services/ngrok'
    )

    echo

    box_start "LAB USER CREATION (CONTINUATION)"
    
    box_row 1 33 "*" "Changing directory"

    cd "$HOME"

    box_row 1 33 "*" "Creating dotfiles tar file"
    box_end

    tar --create --verbose --gzip \
        --file "$OUT_TAR_FILE" \
        "${EXCLUDES[@]}" \
        "${IN_FILES[@]}"

    printf "\n"

    box_start "LAB USER CREATION (CONTINUATION)"

    box_row 1 33 "*" "Dotfiles tar created: $OUT_TAR_FILE"

    box_row 1 33 "*" "Creating new user $USERNAME"

    #sudo useradd -m -p "$PASSWORD_ENCRYPTED" "$USERNAME"
    sudo useradd -m  "$USERNAME"
    echo "$USERNAME:$PASSWORD" | sudo chpasswd
    USER_ID=$(id -u "$USERNAME")

    box_row 1 33 "*" "User $USERNAME created with ID $USER_ID"
    box_row 1 33 "*" "Moving tar file."

    sudo chown "$USERNAME:$USERNAME" "$OUT_TAR_FILE"
    sudo mv "$OUT_TAR_FILE" "$OUT_TAR_FILE2"

    box_row 1 33 "*" "Changing directory"

    cd "/home/$USERNAME"

    box_row 1 33 "*" "Extracting tar file."

    box_end

    sudo -i -u "$USERNAME" \
        tar --extract --verbose --gzip \
        --file "$OUT_TAR_FILE2"

    sudo rm "$OUT_TAR_FILE2"

    echo

    box_start "LAB USER CREATION (CONTINUATION)"
    box_row 1 33 "*" "Changing directory"

    cd .dotfiles

    box_row 1 33 "*" "Setting up user."
    box_end

    SETUP_CMD=". /home/$USERNAME/opt/miniconda3/etc/profile.d/conda.sh; cd .dotfiles; ./setup"

    sudo -i -u "$USERNAME" bash -c "$SETUP_CMD dotfiles"
    sudo -i -u "$USERNAME" bash -c "$SETUP_CMD conda"
    sudo -i -u "$USERNAME" bash -c "$SETUP_CMD jupyter"
    sudo -i -u "$USERNAME" bash -c "$SETUP_CMD sage"

    echo

    box_start "LAB USER CREATION (CONTINUATION)"
    box_row 1 33 "*" "Setting jupter server password"

    sudo -i -u "$USERNAME" bash <<EOF
    . "/home/$USERNAME/opt/miniconda3/etc/profile.d/conda.sh"
    conda activate env-sage
    python -c 'from jupyter_server.auth.security import set_password; set_password(password="$PASSWORD")'
EOF

    box_end
    
    sudo -i -u "$USERNAME" bash <<EOF
    . "/home/$USERNAME/opt/miniconda3/etc/profile.d/conda.sh"
    export XDG_RUNTIME_DIR="/run/user/$USER_ID"
    export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/$USER_ID/bus"
    cd .dotfiles
    ./setup lab
EOF
    echo

    box_start "LAB USER CREATION (CONTINUATION)"
    box_row 1 33 "*" "Configuring Apache proxy"

    sudo bash -c "echo 'Use JLabHost $USERNAME $((USER_ID + 8888))' >> /etc/apache2/jupyterlab.conf"

    box_row 1 33 "*" "Done!"
    box_row 1 33 "*" "Remember to restart apache."
    box_end
}

main "$@"
